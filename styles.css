/* @media is used to customize the content for certain users, this line reduce the scroll effect if the user needs it. */
@media (prefers-reduced-motion: no-preference) {
    * {
      scroll-behavior: smooth;
    }
  }
  
  body {
    background: #f5f6f7;
      color: #1b1b32;
      font-family: Helvetica;
      margin: 0;
  }
  
  header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* Position fixed is used to make the header stick to the top of the page at all time, even when you scroll down. */
    position: fixed;
    /* top value will decide which item goes on top if items are overlapping, the closer it is to 0 the higher it will be. */
    top: 0;
  }
  
  /* You can use an id selector to apply css to the html. */
  #logo {
    /* When using max(), the browser will always choose the higher value, so here, the logo size will be 100px, until the screen size is getting large enough for 18vw being more than 100px */
    width: max(100px, 18vw);
    background-color: #0a0a23;
    padding: 0.4rem;
  }
  
  h1 {
    color: #f1be32;
    font-size: min(5vw, 1.2em);
    text-align: center;
  }
  
  nav {
    width: 50%;
    max-width: 300px;
    height: 50px;
  }
  
  /* its possible to look into an element for more precise selector using either space or > */
  nav > ul {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    align-items: center;
    /* padding-inline-start is basically adding padding to the left of the item. */
    padding-inline-start: 0;
    margin-block: 0;
    height: 100%;
  }
  
  nav > ul > li {
    color: #dfdfe2;
    margin: 0 0.2rem;
    padding: 0.2rem;
    display: block;
  }
  
  /* Adding an hover effect for the list items, swapping the text and background colors. */
  nav > ul > li:hover {
    background-color: #dfdfe2;
    color: #1b1b32;
    cursor: pointer;
  }
  
  li > a {
    color: inherit; /* Inherit the color of the parent (li) */
    text-decoration: none;
  }
  
  main {
    padding-top: 50px;
  }
  
  section {
    width: 80%;
    margin: 0 auto 10px auto;
    max-width: 600px;
  }
  
  h1,
  h2 {
    font-family: Verdana, Tahoma;
  }
  
  h2 {
    border-bottom: 4px solid #dfdfe2;
    margin-top: 0px;
    padding-top: 60px;
  }
  
  .info {
    padding: 10px 0 0 5px;
  }
  
  .formrow {
    margin-top: 30px;
    padding: 0px 15px;
  }
  
  input {
    font-size: 16px;
  }
  
  /* choosing elements inside a div with the info class */
  .info label, .info input {
    display: inline-block;
    text-align: right;
  }
  
  .info input {
    width: 50%;
    text-align: left;
  }
  
  .info label {
    width: 10%;
    min-width: 55px;
  }
  
  .question-block {
    text-align: left;
    display: block;
    width: 100%;
    margin-top: 20px;
    padding-top: 5px;
  }
  
  p {
    margin-top: 5px;
    padding-left: 15px;
    font-size: 20px;
  }
  
  /* adding something before the p element using ::before */
  p::before {
    /* adding content to an html element using css */
    content: "Question #";
    /* Before every P element across the page the text 'Question #' will be added */
  }
  
  .question {
    border: none;
    padding-bottom: 0;
  }
  
  .answers-list {
    list-style: none;
    padding: 0;
  }
  
  button {
    display: block;
    margin: 40px auto;
    width: 40%;
    padding: 15px;
    font-size: 23px;
    background: #d0d0d5;
    border: 3px solid #3b3b4f;
  }
  
  footer {
    background-color: #2a2a40;
    display: flex;
    justify-content: center;
  }
  
  footer,
  footer a {
    color: #dfdfe2;
  }
  
  address {
    text-align: center;
    padding: 0.3em;
  }
  
  /* This css rule making it so the content of an element will be hidden but screen readers will still be able to read it. */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  